$fontPrimary: Inter, Source Sans Pro, Helvetica Neue, Arial, sans-serif;
$fontSecondary: "Nunito", sans-serif;
$fontLogo: "Roboto Slab", serif;
$fontHandwriting: "Permanent Marker", cursive;
$fontCode: "Ubuntu Mono", monospace;

$colors: (
  app-white: #f8f9fa,
  app-white-med: #f6f6f6,
  app-light: #fdf6da,
  app-dark: #1a1a1a,
  app-dark-light: #2f2f2f,
  app-txt: #302e2f,
  null: rgba(0, 0, 0, 0),
  modal-white: #f7f7f7,
  success: #00eb5e,
  err: #c22257,
  focus: #0095eb,
  app-red: #c8605e,
  app-red-light: #dd7b65,
  app-red-dark: #9f4847,
  app-red-darker: #803938,
  app-peach: #edc3b9,
  app-tan: #e5d8cd,
  app-yellow: rgba(231, 198, 146, 0.81),
  app-green: #19ab88,
  app-green-light: #c6dada,
  app-blue: #18323c,
  app-blue-med: #164953,
  app-blue-light: #1a4a53,
  app-blue-wild: #2d4963,
  app-skyblue: #6e90a3,
  app-skyblue-med: #93bec7,
  app-skyblue-light: #c6dada,
  app-brown: #46383c,
  app-brown-light: #584b35,
  app-purple: #915ea0,
  app-gray-lighter: #e0e7ec,
  app-gray-light: #b4c0d1,
  app-gray: #adb2bd,
  app-gray-med: #9aa5b4,
  app-gray-dark: #2a2f3b,
  app-silver: #7f7774,
  app-silver-med: #504a49,
  app-silver-dark: #413938,
  app-mocha: #46271d,
  app-mocha-dark: #210501,
);
$animations: (
  expand-down: expand-down 0.45s ease-in both,
  fade-in: fadeIn 0.8s,
  from-top: fromTop 0.8s cubic-bezier(0.39, 0.575, 0.565, 1),
  from-right: fromRight 0.5s cubic-bezier(0.39, 0.575, 0.565, 1),
  from-left: fromLeft 0.5s cubic-bezier(0.39, 0.575, 0.565, 1),
  scale-left: scaleLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) both,
  fold-up: fold-up 0.4s linear both,
  ping: ping 0.8s ease-in-out infinite both,
  transition-1: all 0.4s cubic-bezier(0.75, 0, 0.125, 1),
  transition-2: all 0.4s ease-in,
);
$breakpoints: (
  "phone": 400px,
  "phone-wide": 480px,
  "phablet": 560px,
  "tablet-small": 640px,
  "tablet": 768px,
  "tablet-med": 900px,
  "tablet-wide": 1024px,
  "desktop-small": 1150px,
  "desktop": 1248px,
  "desktop-wide": 1440px,
  "ultra-wide": 2000px,
);

$bigh-font-sizes: (
  null: calc(2.5rem + 0.25vw),
  map-get($breakpoints, "phone-wide"): calc(2.8rem + 0.25vw),
  map-get($breakpoints, "phablet"): calc(3.5rem + 0.25vw),
  map-get($breakpoints, "tablet"): calc(4.5rem + 0.25vw),
  map-get($breakpoints, "desktop"): calc(5rem + 0.25vw),
  map-get($breakpoints, "ultra-wide"): calc(6rem + 0.25vw),
);

$h1-font-sizes: (
  null: calc(1.9rem + 0.25vw),
  map-get($breakpoints, "phone-wide"): calc(2rem + 0.25vw),
  map-get($breakpoints, "phablet"): calc(2.4rem + 0.25vw),
  map-get($breakpoints, "tablet"): calc(2.8rem + 0.25vw),
  map-get($breakpoints, "desktop"): calc(3.2rem + 0.25vw),
  map-get($breakpoints, "ultra-wide"): calc(4rem + 0.25vw),
);

$h1-font-sizes: (
  null: calc(1.9rem + 0.25vw),
  map-get($breakpoints, "phone-wide"): calc(2rem + 0.25vw),
  map-get($breakpoints, "phablet"): calc(2.4rem + 0.25vw),
  map-get($breakpoints, "tablet"): calc(2.8rem + 0.25vw),
  map-get($breakpoints, "desktop"): calc(3.2rem + 0.25vw),
  map-get($breakpoints, "ultra-wide"): calc(4rem + 0.25vw),
);

$h2-font-sizes: (
  null: calc(1.4rem + 0.2vw),
  map-get($breakpoints, "phone-wide"): calc(1.6rem + 0.2vw),
  map-get($breakpoints, "phablet"): calc(1.8rem + 0.2vw),
  map-get($breakpoints, "tablet"): calc(2rem + 0.2vw),
  map-get($breakpoints, "desktop"): calc(2.2rem + 0.2vw),
  map-get($breakpoints, "ultra-wide"): calc(2.8rem + 0.2vw),
);

$h3-font-sizes: (
  null: calc(1.1rem + 0.15vw),
  map-get($breakpoints, "phablet"): calc(1.3rem + 0.15vw),
  map-get($breakpoints, "tablet"): calc(1.4rem + 0.15vw),
  map-get($breakpoints, "desktop"): calc(1.6rem + 0.15vw),
  map-get($breakpoints, "ultra-wide"): calc(2rem + 0.15vw),
);

$p-font-sizes: (
  null: calc(1rem + 0.15vw),
  map-get($breakpoints, "phablet"): calc(1.2rem + 0.15vw),
  map-get($breakpoints, "tablet"): calc(1.3rem + 0.15vw),
  map-get($breakpoints, "desktop"): calc(1.4rem + 0.15vw),
  map-get($breakpoints, "ultra-wide"): calc(1.6rem + 0.15vw),
);

$sub-font-sizes: (
  null: calc(0.85rem + 0.1vw),
  map-get($breakpoints, "phablet"): calc(0.95rem + 0.1vw),
  map-get($breakpoints, "tablet"): calc(1rem + 0.1vw),
  map-get($breakpoints, "desktop"): calc(1.2rem + 0.1vw),
  map-get($breakpoints, "ultra-wide"): calc(1.3rem + 0.1vw),
);

// Functions
@function responsive-theme($color) {
  @if (lightness($color) > 70) {
    @return map-get($colors, dark);
  } @else {
    @return map-get($colors, app-white);
  }
}

// Mixins
@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    } @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number
    {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}
// Positioning helpers
@mixin absolute($args: "") {
  @include position(absolute, $args);
}
@mixin fixed($args: "") {
  @include position(fixed, $args);
}
@mixin relative($args: "") {
  @include position(relative, $args);
}

@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
  }
}

@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin css-triangle(
  $color,
  $direction,
  $size: 6px,
  $position: absolute,
  $round: false
) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

@mixin set-background($color) {
  background-color: $color;
  color: responsive-theme($color);
}

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
